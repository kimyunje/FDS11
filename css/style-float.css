/* CSS를 활용한 레이아웃 및 UI 디자인 */
/* float은 container가 아니라 item 각각에 효과를 줘야 한다. */
body{
    margin: 0;
}
h1, h2, h3, h4, h5, h6{
    font-size: 1em;
    font-weight: normal;
    margin: 0;
}
/* reset 에이전 스타일>> 원하는 스타일로 초기화 시켜놓고 작업을 시작하는 것. */

/* 레이아웃 */
.container{
    background-color: #aaa;
    margin: 0 auto;
}

/* float 이슈를 해결하기 위한 css 코드 */
.header, .visual, .main, .slogan, .footer{
    background-color: #aaa;
    height: 100vh;
    width: 940px;
    margin: 0 auto;
}

.clearfix::after{
    content: "";
    display:block;
    clear: both;
}
/* 가상요소 태그 */
/* before, after 를 가지고 대상의 맨 앞과 뒤에 가상요소를 만들수 있다.
이때 만들어지는 박스는 inline을 가지기 때문에 줄바꿈이 안된다. */
/* clear는 block에만 줄 수 있다. */
/* 컨텐츠를 null로 만들려면 아무것도 적지말기 */
/* 공통요소를 만들어서 html의 class에 clearfix를 주면된다. */

/* 헤더 */
.header{
    background-color: yellow;
    height : 10vh;
}
/* shift + alt + 아래키 = 복제 */

/* 비주얼 */
.visual{
    background-color: orange;
    height : 10vh;
}

/* 메인 */
.main{
    background-color: blue;
    /* height : 60vh; */
    /* overflow: hidden; */
    /* 넘치는 부분을 숨겨주세요 라는 뜻 */
}
.main div{
    height: 100px;

} 
.group1{
    background-color:yellow;
    width: 250px;
    float: left;
    position: relative 50px;
}
/* 순서대로 가는 normal flow를 벗어나서 부모영역에서 제일 왼쪽으로 */
/* 그룹1은 그룹2와 겹쳐서 떠있다. 하지만 글씨는 밀어낸다. */
.group2{
    background-color: teal;
    width: 380px;
    float: left;
}
.group3{
    background-color: pink;
    width: 190px;
    float:left;
}
.clearfix{
    background-color: tomato;
    height: 0 !important;
    clear: both;
}

/* 슬로건 */
.slogan{
    background-color:lime;
    height : 10vh;
    margin-top: 50px;
    /* margin-top: 50px;
} */
/* 푸터 */
.footer-bg{
    background-color: purple;
}
.footer{
    background-color:pink;
    height : 10vh;
}